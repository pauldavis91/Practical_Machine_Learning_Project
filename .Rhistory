str(freqdata)
unique(freqdata$parent)
str(freqdata$parent)
table(freqdata$parent)
source('C:/Users/SONY/Desktop/workfile.R')
source('C:/Users/SONY/Desktop/workfile.R')
g<-ggplot(filter(freqdata,freq>0),aes(x=parent,y=child))
g<-g+scale_size(range = c(2,20),guide = "none")
g<-g+geom_point(colour="grey50",aes(size=freq+20,show_guide=FALSE))
g<-g+geom_point(aes(colour=freq,size=freq))
g<-g+scale_color_gradient(low="lightblue",high="white")
G
g
source('C:/Users/SONY/Desktop/workfile.R')
g<-ggplot(filter(freqdata,freq>0),aes(x=parent,y=child))
g
g<-g+geom_point(aes(colour=freq,size=freq))
g
g<-g+geom_point(aes(colour=freq))
g
j<-ggplot(filter(freqdata,freq>0),aes(x=parent,y=child))
j<-j+geom_point(aes(colour=freq))
j
j<-j+geom_point(aes(size=freq))
j
k<-ggplot(filter(freqdata,freq>0),aes(x=parent,y=child))
k<-k+geom_point(aes(size=freq))
k
u<-ggplot(filter(freqdata,freq>0),aes(x=parent,y=child))
u<-u+geom_point(aes(colour=freq,size=freq))
u
u<-u+scale_color_gradient(low="lightblue",high="white")
u
u<-u+geom_point(colour="grey50")
u
u<-u+geom_point(colour="grey50",aes(size=freq+20))
u
u<-u+geom_point(aes(colour=freq,size=freq))
u
g<-g+scale_size(range = c(2,20),guide = "none")
u<-u+scale_size(range = c(2,20),guide = "none")
u
y<-galton$child
x<-galton$parent
coef(lm(y~x))
coef(lm(y~x))[2]
u<-u+geom_smooth(method = "lm",formula = y~x)
u
x<-rnorm(100)
odr<-order(x)
str(odr)
head(odr)
odr[100]
tail(odr)
x[odr(100)]
x[odr[100]]
odr[1]
head(x)
tail(x)
x[odr[100]]
odr[100]
odr[17]
x[17]
x<-rnorm
x<-rnorm(100)
odr<-order(x)
odr[1]
odr
odr[2]
x[odr[1]]
x
x[odr[100]]
x<-c(0.18,-1.54,0.42,0.95)
y<-c(2,1,3,1)
sum(x*y)/sum(y)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x-1)
lm((y-mean(y))~(x-mean(x))-1)
lm(I(y-mean(y))~I(x-mean(x))-1)
data("mtcars")
str(mtcars)
y<-mtcars$mpg
x<-mtcars$wt
lm(y~x-1)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(x-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
abs()
?abs
abs(5)
abs(2.1235)
?lines
?runif
runif(5,0,2)
runif(5,0,2)
runif(5,0,2)
?rep
library(UsingR)
data("diamond")
e<-c(resid(lm(price~1,data = diamond)),resid(lm(price~carat,data = diamond)))
fit<-factor(rep("Itc",nrow(diamond)),rep("Itc, slope",nrow(diamond)))
fit<-factor(c(rep("Itc",nrow(diamond)),rep("Itc, slope",nrow(diamond))))
g=ggplot(data.frame(e=e,fit=e),aes(y=e,x=fit,fill=fit))
g=g+geom_dotplot(binaxis = "y",size="2",stackdir = "center",binwidth = 20)
g=g+geom_dotplot(binaxis = "y",size=2,stackdir = "center",binwidth = 20)
g=g+xlab("Fitting approach")
g = g + ylab("Residual price")
g
y=ggplot(data.frame(e=e,fit=e),aes(y=e,x=fit,fill=fit))
y
y=y+geom_dotplot(binaxis = "y",size="2",stackdir = "center",binwidth = 20)
y=y+geom_dotplot(binaxis = "y",size=2,stackdir = "center",binwidth = 20)
y=y+geom_dotplot(binaxis = "y",stackdir = "center",binwidth = 20)
y
y=y+geom_dotplot(binaxis = "y",size=2,stackdir = "center",binwidth = 20)
y
y=y+geom_dotplot(binaxis = "y",size=10,stackdir = "center",binwidth = 20)
y
y=y+geom_dotplot(binaxis = "y",size=20,stackdir = "center",binwidth = 20)
y
y=y+geom_dotplot(binaxis = "y",size=20,stackdir = "center",binwidth = 20)
?geom_dotplot
y=y+geom_dotplot(binaxis = "y",dotsize=20,stackdir = "center",binwidth = 20)
y
y=y+geom_dotplot(binaxis = "y",dotsize=2,stackdir = "center",binwidth = 20)
y
y=y+geom_dotplot(binaxis = "y",dotsize=0.2,stackdir = "center",binwidth = 20)
y
y=y+geom_dotplot(binaxis = "y",stackdir = "center",binwidth = 20)
y
h=ggplot(data.frame(e=e,fit=e),aes(y=e,x=fit,fill=fit))
h=h+geom_dotplot(binaxis = "y",dotsize=2,stackdir = "center",binwidth = 20)
h
h=h+geom_dotplot(binaxis = "y",dotsize=1,stackdir = "center",binwidth = 20)
h
j=ggplot(data.frame(e=e,fit=e),aes(y=e,x=fit,fill=fit))
j=j+geom_dotplot(binaxis = "y",dotsize=1,stackdir = "center",binwidth = 20)
j
?geom_dotplot
k=ggplot(data.frame(e=e,fit=e),aes(y=e,x=fit,fill=fit))
k=k+geom_dotplot(binaxis = "x",dotsize=1,stackdir = "center",binwidth = 20)
k
b=ggplot(data.frame(e=e,fit=e),aes(y=e,x=fit,fill=fit))
b=b+geom_dotplot(binaxis = "y",dotsize=1,stackdir = "left",binwidth = 20)
b
?geom_dotplot
b=b+geom_dotplot(binaxis = "y",dotsize=1,stackdir = "up",binwidth = 20)
b
b=b+geom_dotplot(binaxis = "y",dotsize=1,stackdir = "center",binwidth = 20)
b
p=ggplot(data.frame(e=e,fit=e),aes(y=e,x=fit,fill=fit))
p=p+geom_dotplot(binaxis = "y",dotsize="1",stackdir = "top",binwidth = 20)
p
?pt
?abs
abs(4)
abs(-7)
?pt
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y~x)
p<-lm(y~x)
summary(p)
?pt
n <- length(y)
(pBeta1 <- 2 * pt(abs(tBeta1), df = n - 2, lower.tail = FALSE))
pBeta1
pBeta1
source('C:/Users/SONY/Desktop/Project/script1.R')
pBeta1
source('C:/Users/SONY/Desktop/Project/script1.R')
source('C:/Users/SONY/Desktop/Project/script1.R')
pBeta1
tBeta1
abs(tBeta1)
data("mtcars")
f<-lm(mpg~weight)
mean(mpg)
f<-lm(mtcars$mpg~mtcars$weight)
str(mtcars)
f<-lm(mpg~wt)
f<-lm(mtcars$mpg~mtcars$wt)
?predict
predict(f,newdata = mean(mtcars$wt),interval = ("confidence"))
predict(f,newdata = data.frame(mean(mtcars$wt)),interval = ("confidence"))
predict(f,newdata = data.frame(mtcars$wt=mean(mtcars$wt)),interval = ("confidence"))
y <- mtcars$mpg
x <- mtcars$wt
fit_car <- lm(y ~ x)
predict(fit_car, newdata = data.frame(x = mean(x)), interval = ("confidence"))
?mtacrs$wt
help(mtcars)
predict(fit_car, newdata = data.frame(x = 3, interval = ("prediction"))
)
predict(fit_car, newdata = data.frame(x = 3), interval = ("prediction"))
coef(f)
summary(f)
coef(p)
p
p[1]
p[2]
p[[1]]
p$df
p$sigma
y <- mtcars$mpg
x <- mtcars$wt
fit_car2 <- lm(y ~ I(x/2))
sumCoef2 <- coef(summary(fit_car2))
qp<coef(summary(fit_car2))
qp<-coef(summary(fit_car2))
qp
qp[2,2]
qp[2,1]
j1<-lm(y~x)
j2<-lm(y~1)
(sum(j1)^2)/(sum(j2)^2)
(sum(resid(j1)^2)/(sum(resid(j2)^2)
)
)
(sum(resid(j1)^2))/(sum(resid(j2)^2))
library(swirl)
install_from_swirl("Regression Models")
swirl()
ones<-rep(1,nrow(galton))
lm(child~ones+parent-1)
lm(Child~ones+parent-1)
ones<-lm(child ~ ones + parent -1, galton)
lm(child ~ ones + parent - 1, galton)
lm(child ~ parent, galton)
?require
?ggpairs
?runif
x<-c(A,A,A,A,B,B,B,B,C,C,C,C)
x<-c("A","A","A","A","B","B","B","B","C","C","C","C")
y<-c(1,1,1,1,3,5,4,6,22,33)
z<-as.data.frame(x,y)
?as.data.frame
z<-as.data.frame(x=x,y-y)
z<-merge(as.data.frame(x),as.data.frame(y))
z
z<-data.frame(x=x,y-y)
x<-c("A","A","A","A","B","B","B","B","C","C","C","C")
y<-c(1,1,1,1,3,5,4,6,2,2,3,3)
z<-data.frame(x=x,y-y)
z
z<-data.frame(x=x,y=y)
z
library(ggplot2)
g=ggplot(data=z,aes(y=y,x=x,fill=x))
g=g+geom_violin(colour=black,size=2)
g=g+geom_violin(colour=black,size=2)
g=g+geom_violin(colour="black"",size=2)
""
g=g+geom_violin(colour="black",size=2)
g
?par
?par
n<-100
x<-c(10,rnorm(n))
y<-c(10,rnorm(n))
plot(x,y,frame=FALSE, CEX=2,pch=21,bg="lightblue",col="black")
abline(lm(y~x))
?apply
x<-matrix(1:4,c(5,8,10,9))
x<-matrix(1:4,6:10
)
x<-matrix(c(1,2,3,4,5,2,8,2,4,1,5,1),nrow = 3,ncol = 4)
x
apply(x,1,mean)
m<-sapply(1:10,function(i)){}
m<-sapply(1:10,function(i))
m<-sapply(1:10,function(i)){c(2,3,4)}
m<-sapply(1:10,function()){c(2,3,4)}
data("mtcars")
summary(mtcars)
str(mtcars)
fit<-lm(mpg~cyl+wt,data=mtcars)
fit
fit<-lm(mpg~factor(cyl)+wt,data=mtcars)
fit
table(mtcars$cyl)
fit<-lm(mpg~factor(cyl)+wt-1,data=mtcars)
fit
fit<-lm(mpg~factor(cyl)-1+wt,data=mtcars)
fit
fit<-lm(mpg~factor(cyl)+wt,data=mtcars)
fit
fit<-lm(mpg~factor(cyl),data=mtcars)
fit
fit1<-lm(mpg~factor(cyl)+wt-1,data=mtcars)
fit1
fit2<-lm(mpg~factor(cyl)-1,data=mtcars)
fit2
str
str(mtacrs$wt)
head(mtacrs$wt)
head(mtcars$wt)
fit1<-lm(mpg~factor(cyl)+wt)
fit1<-lm(mpg~factor(cyl)+wt,data=mtcars)
fit2<-lm(mpg~factor(cyl)*wt,data=mtcars)
anova(fit1,fit2)
?mtcars
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
plot(x~y)
plot(y~x)
fit<-lm(y~x)
hatvalues(fit)
hat(fit)
hat(fit)
dfbetas(fit)
n<-500
x<-seq(0,8*pi,length=n)
str(x)
summary(x)
8*3.14
head(x,23)
y<-rnorm(500,sd=0.3)
summary(y)
knots<-seq(0,8*pi,length=20)
summary(knots)
x<-seq(0,4*pi,length=n)
splineterms<-sapply(knots,function(knot)(x>knot)*(x-knot))
head(splineterms)
head(x)
head(knots)
summary(splineterms)
c<-(x>knot)*(x-knot)
c<-(x>knots)*(x-knots)
head(c)
str(c)
summary(c)
?function
()
jj<-cbind(1,x)
head(jj)
library(MASS)
Summarymass
summary(MASS)
?MASS
str(MASS)
data("shuttle")
str(shuttle)
table(shuttle$use)
table(shuttle$wind)
library(MAS)
library(MASS)
data("shuttle")
str(shuttle)
table(shuttle$use)
table(shuttle$wind)
?glm
shuttle2<-mutate(shuttle,auto=1*(use=="auto"))
shuttle2<-mutate(shuttle,auto=1*(use=="auto"))
library(dplyr)
shuttle2<-mutate(shuttle,auto=1*(use=="auto"))
str(shuttle2)
head(shuttle2$use,20)
table(shuttle2$use)
table(shuttle2$auto)
View(shuttle)
library(MASS)
data("shuttle")
str(shuttle)
table
table(shuttle$use)
table(shuttle$wind)
library(MASS)
data("shuttle")
table(shuttle$use)
table(shuttle$wind)
library(dplyr)
newshutter<-mutate(auto=1*(use=="auto"))
newshutter<-mutate(auto=1*(shuttle$use=="auto"),data=newshuttle)
newshutter<-mutate(shuttle, auto=1*(use=="auto"))
str(newshutter)
table(newshutter$auto)
stat<-glm(auto~factor(wind)-1,family = binomial(link="logit"),data = newshuttle)
stat<-glm(auto~factor(wind)-1,family = binomial(link="logit"),data = newshutter)
summary(stat)
summary(stat)$coef
stat<-glm(auto~factor(wind),family = binomial(link="logit"),data = newshutter)
summary(stat)$coef
stat<-glm(auto~factor(wind)-1,family = binomial(link="logit"),data = newshutter)
summary(stat)$coef
coeff<-summary(stat)$coef
exp(coeff(1,1)-coeff(1,2))
coeff
exp(coeff[1,1]-coeff[1,2])
exp(coeff[1,1]-coeff[2,1])
est1<-glm(auto~factor(wind)+factor(magn)-1,family=binomial,data=newshutter)
coeff<-summary(stat)$coef
exp(coeff[1,1]-coeff[2,1])
coeff<-summary(est1)$coef
exp(coeff[1,1]-coeff[2,1])
data("InsectSprays")
str(InsectSprays)
model<-glm(num~factor(spray)-1,family = binomial,data=InsectSprays
)
model<-glm(count~factor(spray)-1,family = binomial,data=InsectSprays)
model<-glm(count~factor(spray)-1,family = poisson,data=InsectSprays)
co<-summary(model)$coef
exp(co[1,1]-co[2,1])
?ggpairs
source('C:/Users/SONY/Desktop/Regression/file.R')
?ggpairs
ggpairs(mtcarsfactors[,corssubset],aes(color=am),upper=list(continous=wrap("cor",size=3)),lower=list(continuous=wrap("smooth",alpha=0.4,size=1),combo=wrap("dot")))
mtcarsfactors[,corssubset]%>%ggpairs(mapping=ggplot2::aes(color=am),upper=list(continous=wrap("cor",size=3)),lower=list(continuous=wrap("smooth",alpha=0.4,size=1),combo=wrap("dot")))
ggpairs(mtcarsfactors[,corssubset],aes(color=am),upper=list(continous=wrap("cor",size=3)),lower=list(continuous=wrap("smooth",alpha=0.4,size=1),combo=wrap("dot")))
?ggpairs
?wrap
?smooth
source('C:/Users/SONY/Desktop/Regression/file.R')
library(caret)
install.packages(caret)
install.packages("caret")
library(caret)
install.packages("kernlab")
install.packages("kernlab")
data(spam)
library(caret)
library(kernlab)
data("spam")
str(spam)
intrain<-createDataPartition(y=spam$type,p=0.75,list = FALSE)
training<-spam[intrain]
testing<-spam[-spam]
testing<-spam[-intrain]
?predict
x<-predict(type~., data=training, method = "glm")
modelfit<-train(type~.,data = training,method="glm")
modelfit<-train(type~.,data=training,method="glm")
modelfit<-train(type~.,data="training",method="glm")
modelfit<-train(type~.,data=training,method="glm")
modelfit<-train(type~.,data=training,method="glm")
modelfit<-train(x=training,y=training$type,method="glm")
set.seed(5555)
modelfit<-train(type~.,data=training,method="glm")
modelfit<-train(training$type~.,data=training,method="glm")
modelfit<-train(training$type~.,data=training,method="glm")
training<-spam[intrain,]
testing<-spam[-intrain,]
modelfit<-train(type~.,data=training,method="glm")
install.packages("e1071")
library(e1071)
modelfit<-train(type~.,data=training,method="glm")
modelfit
modelfit$finalModel
predictions<-predict(modelfit,newdata=testing)
predictions
preproc<-preProcess(log10(training[,-58]+1),method = pca, pcaComp = 2)
preproc<-preProcess(log10(training[,-58]+1),method = "pca", pcaComp = 2)
preproc
preproc[]
str
str(preproc)
trainpc<-predict(preproc,log10(training[,-58]+1))
trainpc
preproc
pca[,1]
training[1]
training[[1]]
str(training)
str(training[1])
str(training[[1])
str(training[[1]])
library(Hmisc)
?cut2
install.packages("ElemStatLearn")
library(ElemStatLearn)
data("ozone")
head(ozone)
str(ozone)
ozone<-ozone[order(ozone$ozone)]
ozone<-ozone[order(ozone$ozone),]
head(ozone)
ll<-matrix(NA,nrow = 10,ncol = 155)
for (i in 100) {
ss<-sample(1:dim(ozone)[1],replace = T)
}
SS
ss<-sample(1:dim(ozone)[1],replace = T)
SS
str(ss)
unique(ss)
str(unique(ss))
x<-data.frame(ozone=1:15)
x
str(x)
?apply
?sample
?colSums
library(caret)
library(rattle)
install.packages(rattle)
install.packages("rattle")
TrainData <- read.csv(url("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"),header=TRUE)
names(TrainData)
?train
str(train$classe)
str(TrainData$classe)
setwd("C:/Users/SONY/Desktop/Practical Machine Learning Project")
install.packages("randomforest")
install.packages("randomForest")
install.packages("GBM")
install.packages("gbm")
